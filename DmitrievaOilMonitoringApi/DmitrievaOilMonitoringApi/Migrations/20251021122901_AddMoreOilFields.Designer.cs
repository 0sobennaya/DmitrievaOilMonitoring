// <auto-generated />
using System;
using DmitrievaOilMonitoringApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DmitrievaOilMonitoringApi.Migrations
{
    [DbContext(typeof(OilMonitoringApiContext))]
    [Migration("20251021122901_AddMoreOilFields")]
    partial class AddMoreOilFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DmitrievaOilMonitoringApi.Models.Oil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Contamination")
                        .HasColumnType("float");

                    b.Property<DateTime>("InstallationDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("OperatingHours")
                        .HasColumnType("float");

                    b.Property<int>("StartStopCycles")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TAN")
                        .HasColumnType("float");

                    b.Property<double>("Viscosity")
                        .HasColumnType("float");

                    b.Property<double>("WaterContent")
                        .HasColumnType("float");

                    b.Property<double?>("Wear")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Oils");
                });
#pragma warning restore 612, 618
        }
    }
}
